name: Cost Documentation Engine CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'FBA Refund Predictor/cost-documentation-module/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'FBA Refund Predictor/cost-documentation-module/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'FBA Refund Predictor/cost-documentation-module/package-lock.json'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libnss3 \
          libatk-bridge2.0-0 \
          libdrm2 \
          libxkbcommon0 \
          libxcomposite1 \
          libxdamage1 \
          libxfixes3 \
          libxrandr2 \
          libgbm1 \
          libasound2 \
          libpango-1.0-0 \
          libcairo2 \
          libatspi2.0-0
          
    - name: Install dependencies
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm ci
      
    - name: Install Puppeteer dependencies
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npx puppeteer browsers install chrome
      
    - name: Run linting
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm run lint
      
    - name: Run type checking
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm run type-check
      
    - name: Run tests
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm test -- --coverage --verbose
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: FBA Refund Predictor/cost-documentation-module/coverage/lcov.info
        flags: cost-docs
        name: cost-documentation-coverage
        
    - name: Verify determinism
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: |
        # Make script executable (for Unix-like systems)
        chmod +x scripts/verify-determinism.sh
        # Run determinism verification
        ./scripts/verify-determinism.sh
        
    - name: Build production
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm run build
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: cost-docs-build-${{ matrix.node-version }}
        path: FBA Refund Predictor/cost-documentation-module/dist/
        retention-days: 7

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: 'FBA Refund Predictor/cost-documentation-module/package-lock.json'
        
    - name: Install dependencies
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm ci
      
    - name: Run security audit
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm audit --audit-level=moderate
      
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
        working-directory: FBA Refund Predictor/cost-documentation-module

  integration:
    runs-on: ubuntu-latest
    needs: test
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cost_docs_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        cache-dependency-path: 'FBA Refund Predictor/cost-documentation-module/package-lock.json'
        
    - name: Install dependencies
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm ci
      
    - name: Install Puppeteer dependencies
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npx puppeteer browsers install chrome
      
    - name: Setup database
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: |
        npm run db:generate
        npm run db:push
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cost_docs_test
        
    - name: Run integration tests
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: npm run test:integration
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cost_docs_test
        REDIS_URL: redis://localhost:6379
        
    - name: Test worker startup
      working-directory: FBA Refund Predictor/cost-documentation-module
      run: |
        timeout 30s npm run worker:cost-docs || true
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cost_docs_test
        REDIS_URL: redis://localhost:6379



